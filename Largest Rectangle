#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include<stack>
using namespace std;

void getMaxArea(long int hist[],long int n)
{
    stack<int> s;

    long int max_area = 0;
    long int tp; 
    long int area_with_top;
    long int i = 0;
    while (i < n)
    {
        if (s.empty() || hist[s.top()] <= hist[i])
            s.push(i++);
else
        {
            tp = s.top(); 
            s.pop();
            area_with_top = hist[tp] * (s.empty() ? i : i - s.top() - 1);

            if (max_area < area_with_top)
                max_area = area_with_top;
        }
    }

    while (s.empty() == false)
    {
        tp = s.top();
        s.pop();
        area_with_top = hist[tp] * (s.empty() ? i : i - s.top() - 1);

        if (max_area < area_with_top)
            max_area = area_with_top;
    }

    cout<<max_area;
}

int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */  
    long int no_building,max=0;
    cin>>no_building;
    long int* height = new long int[no_building];
    for(long int i=0;i<no_building;i++)
        cin>>height[i];
    getMaxArea(height,no_building);        
    return 0;
}
